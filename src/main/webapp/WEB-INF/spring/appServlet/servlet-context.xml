<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	
	
	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />



	<!-- 이전설정 -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
<!-- 	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean> 
	
	<context:component-scan
		base-package="com.myspring.pro27" />
	
	-->
	

	


	<!-- tiles설정 -->
	<!-- TilesConfigurer 타일 정의의 위치를 정하고, 불러오고, 일반적으로 타일들을 배치 -->
	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>classpath:tiles/*.xml</beans:value>
			</beans:list>
		</beans:property>

		<!-- tiles에 추가적인 기능을 더해주기 위해 선언한 부분 -->
		<!-- https://docs.spring.io/spring-framework/docs/5.0.13.RELEASE/javadoc-api/org/springframework/web/servlet/view/tiles3/SpringBeanPreparerFactory.html -->
		<beans:property name="preparerFactoryClass"
			value="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory" />
	</beans:bean>

	<!-- UrlBasedViewResolver ViewResolver의 구현체로 특별한 맵핑 정보 없이 view 이름을 URL로 
		사용 View 이름과 실제 view 자원과의 이름이 같을 때 사용할 수 있다. -->
	<beans:bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</beans:bean>
	
	
<!--    <mvc:interceptors>
    	<mvc:interceptor>
	      <mvc:mapping path="/*/*.do"/>
	   <beans:bean class="com.myspring.pro27.member.interceptor.ViewNameInterceptor" />
	</mvc:interceptor>
</mvc:interceptors>
 -->
<context:component-scan
		base-package="com.myspring.pro27" />

</beans:beans>
